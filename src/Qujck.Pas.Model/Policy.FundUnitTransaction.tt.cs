//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Xml.Linq;
using System.Xml.Serialization;
using Qujck.Pas.Core.Enumerations;
using Qujck.Pas.Model.Policy.DataObjects;

namespace Qujck.Pas.Model.Policy
{
    [Serializable]
    public sealed partial class FundUnitTransaction : AbstractPolicyEntity
    {
        internal FundUnitTransactionDo initialValues { get; private set; }
        internal FundUnitTransactionDo updatedValues { get; private set; }
        internal Action<FundUnitTransactionDo, string> loadMissingValue { private get; set; }

        public FundUnitTransaction()
        {
            this.initialValues = new FundUnitTransactionDo();
            this.updatedValues = new FundUnitTransactionDo();
            this.loadMissingValue = (a, b) => { };
        }

        [XmlIgnore]
        internal override string schema
        {
            get
            {
                return "Policy";
            }
        }

        [XmlIgnore]
        internal override string table
        {
            get
            {
                return "FundUnitTransaction";
            }
        }

        [XmlIgnore]
        internal override IEnumerable<string> columns
        {
            get
            {
                yield return "id";
                yield return "type";
                yield return "amount";
                yield return "numberOfUnits";
                yield return "transactionDate";
                yield return "valueDate";
                yield return "Fund_code";
                yield return "FundUnit_type";
                yield return "MoneyIn_id";
                yield return "MonetaryTransaction_id";
                yield return "InvestmentBenefit_id";
            }
        }

        public override long id
        {
            get
            {
                return this.initialValues.id;
            }
            set
            {
                this.initialValues.id = value;
            }
        }

        [XmlElement(ElementName="type")]
        public FundTransactionType type 
	    { 
            get
            {
                if (this.updatedValues.typeHasValue)
                {
                    return this.updatedValues.type;
                }
                
                if (!this.initialValues.typeHasValue)
                {
                    this.loadMissingValue(this.initialValues, "type");
                    this.initialValues.typeHasValue = true;
                }

                return this.initialValues.type;
            }
            set
            {
                this.updatedValues.type = value;
            }
        }

        [XmlElement(ElementName="amount")]
        public decimal amount 
	    { 
            get
            {
                if (this.updatedValues.amountHasValue)
                {
                    return this.updatedValues.amount;
                }
                
                if (!this.initialValues.amountHasValue)
                {
                    this.loadMissingValue(this.initialValues, "amount");
                    this.initialValues.amountHasValue = true;
                }

                return this.initialValues.amount;
            }
            set
            {
                this.updatedValues.amount = value;
            }
        }

        [XmlElement(ElementName="numberOfUnits")]
        public decimal numberOfUnits 
	    { 
            get
            {
                if (this.updatedValues.numberOfUnitsHasValue)
                {
                    return this.updatedValues.numberOfUnits;
                }
                
                if (!this.initialValues.numberOfUnitsHasValue)
                {
                    this.loadMissingValue(this.initialValues, "numberOfUnits");
                    this.initialValues.numberOfUnitsHasValue = true;
                }

                return this.initialValues.numberOfUnits;
            }
            set
            {
                this.updatedValues.numberOfUnits = value;
            }
        }

        [DisplayFormat(DataFormatString="{0:d}", ApplyFormatInEditMode=true)]
        [XmlElement(ElementName="transactionDate")]
        public System.DateTime transactionDate 
	    { 
            get
            {
                if (this.updatedValues.transactionDateHasValue)
                {
                    return this.updatedValues.transactionDate;
                }
                
                if (!this.initialValues.transactionDateHasValue)
                {
                    this.loadMissingValue(this.initialValues, "transactionDate");
                    this.initialValues.transactionDateHasValue = true;
                }

                return this.initialValues.transactionDate;
            }
            set
            {
                this.updatedValues.transactionDate = value;
            }
        }

        [DisplayFormat(DataFormatString="{0:d}", ApplyFormatInEditMode=true)]
        [XmlElement(ElementName="valueDate")]
        public System.DateTime valueDate 
	    { 
            get
            {
                if (this.updatedValues.valueDateHasValue)
                {
                    return this.updatedValues.valueDate;
                }
                
                if (!this.initialValues.valueDateHasValue)
                {
                    this.loadMissingValue(this.initialValues, "valueDate");
                    this.initialValues.valueDateHasValue = true;
                }

                return this.initialValues.valueDate;
            }
            set
            {
                this.updatedValues.valueDate = value;
            }
        }

        [StringLength(25)]
        [XmlElement(ElementName="Fund_code")]
        public string Fund_code 
	    { 
            get
            {
                if (this.updatedValues.Fund_codeHasValue)
                {
                    return this.updatedValues.Fund_code;
                }
                
                if (!this.initialValues.Fund_codeHasValue)
                {
                    this.loadMissingValue(this.initialValues, "Fund_code");
                    this.initialValues.Fund_codeHasValue = true;
                }

                return this.initialValues.Fund_code;
            }
            set
            {
                this.updatedValues.Fund_code = value;
            }
        }

        [XmlElement(ElementName="FundUnit_type")]
        public UnitType FundUnit_type 
	    { 
            get
            {
                if (this.updatedValues.FundUnit_typeHasValue)
                {
                    return this.updatedValues.FundUnit_type;
                }
                
                if (!this.initialValues.FundUnit_typeHasValue)
                {
                    this.loadMissingValue(this.initialValues, "FundUnit_type");
                    this.initialValues.FundUnit_typeHasValue = true;
                }

                return this.initialValues.FundUnit_type;
            }
            set
            {
                this.updatedValues.FundUnit_type = value;
            }
        }

        [XmlElement(ElementName="MoneyIn_id")]
        public long? MoneyIn_id 
	    { 
            get
            {
                if (this.updatedValues.MoneyIn_idHasValue)
                {
                    return this.updatedValues.MoneyIn_id;
                }
                
                if (!this.initialValues.MoneyIn_idHasValue)
                {
                    this.loadMissingValue(this.initialValues, "MoneyIn_id");
                    this.initialValues.MoneyIn_idHasValue = true;
                }

                return this.initialValues.MoneyIn_id;
            }
            set
            {
                this.updatedValues.MoneyIn_id = value;
            }
        }

        [XmlElement(ElementName="MonetaryTransaction_id")]
        public long? MonetaryTransaction_id 
	    { 
            get
            {
                if (this.updatedValues.MonetaryTransaction_idHasValue)
                {
                    return this.updatedValues.MonetaryTransaction_id;
                }
                
                if (!this.initialValues.MonetaryTransaction_idHasValue)
                {
                    this.loadMissingValue(this.initialValues, "MonetaryTransaction_id");
                    this.initialValues.MonetaryTransaction_idHasValue = true;
                }

                return this.initialValues.MonetaryTransaction_id;
            }
            set
            {
                this.updatedValues.MonetaryTransaction_id = value;
            }
        }

        [XmlElement(ElementName="InvestmentBenefit_id")]
        public long? InvestmentBenefit_id 
	    { 
            get
            {
                if (this.updatedValues.InvestmentBenefit_idHasValue)
                {
                    return this.updatedValues.InvestmentBenefit_id;
                }
                
                if (!this.initialValues.InvestmentBenefit_idHasValue)
                {
                    this.loadMissingValue(this.initialValues, "InvestmentBenefit_id");
                    this.initialValues.InvestmentBenefit_idHasValue = true;
                }

                return this.initialValues.InvestmentBenefit_id;
            }
            set
            {
                this.updatedValues.InvestmentBenefit_id = value;
            }
        }

        partial void BeforeDeserialize(IQueryable<XElement> elements);
        partial void AfterDeserialize(IQueryable<XElement> elements);

        public override void Deserialize(IQueryable<XElement> elements)
        {
            this.BeforeDeserialize(elements);

            XElement e1 = elements.FirstOrDefault(x => x.Name == "id");
            if (e1 != null)
            {
                this.id = long.Parse(e1.Value);
            }

            XElement e2 = elements.FirstOrDefault(x => x.Name == "type");
            if (e2 != null)
            {
                this.type = e2.Value;
            }

            XElement e3 = elements.FirstOrDefault(x => x.Name == "amount");
            if (e3 != null)
            {
                this.amount = decimal.Parse(e3.Value);
            }

            XElement e4 = elements.FirstOrDefault(x => x.Name == "numberOfUnits");
            if (e4 != null)
            {
                this.numberOfUnits = decimal.Parse(e4.Value);
            }

            XElement e5 = elements.FirstOrDefault(x => x.Name == "transactionDate");
            if (e5 != null)
            {
                this.transactionDate = System.DateTime.Parse(e5.Value);
            }

            XElement e6 = elements.FirstOrDefault(x => x.Name == "valueDate");
            if (e6 != null)
            {
                this.valueDate = System.DateTime.Parse(e6.Value);
            }

            XElement e7 = elements.FirstOrDefault(x => x.Name == "Fund_code");
            if (e7 != null) 
            {
                this.Fund_code = e7.Value;
            }

            XElement e8 = elements.FirstOrDefault(x => x.Name == "FundUnit_type");
            if (e8 != null)
            {
                this.FundUnit_type = e8.Value;
            }

            XElement e9 = elements.FirstOrDefault(x => x.Name == "MoneyIn_id");
            if (e9 != null)
            {
                this.MoneyIn_id = long.Parse(e9.Value);
            }

            XElement e10 = elements.FirstOrDefault(x => x.Name == "MonetaryTransaction_id");
            if (e10 != null)
            {
                this.MonetaryTransaction_id = long.Parse(e10.Value);
            }

            XElement e11 = elements.FirstOrDefault(x => x.Name == "InvestmentBenefit_id");
            if (e11 != null)
            {
                this.InvestmentBenefit_id = long.Parse(e11.Value);
            }

            this.AfterDeserialize(elements);
        }

        partial void BeforeWriteXml(System.Xml.XmlWriter writer);
        partial void AfterWriteXml(System.Xml.XmlWriter writer);

        public override void WriteXml(System.Xml.XmlWriter writer)
        {
            this.BeforeWriteXml(writer);

            writer.WriteElementString("id", this.initialValues.id.ToString());

            if (this.updatedValues.typeHasValue && type != FundTransactionType.Null)
            {
                writer.WriteElementString("type", this.updatedValues.type.Value);
            }
            else if (this.initialValues.typeHasValue && type != FundTransactionType.Null)
            {
                writer.WriteElementString("type", this.initialValues.type.Value);
            }

            if (this.updatedValues.amountHasValue)
            {
                writer.WriteElementString("amount", this.updatedValues.amount.ToString());
            }
            else if (this.initialValues.amountHasValue)
            {
                writer.WriteElementString("amount", this.initialValues.amount.ToString());
            }

            if (this.updatedValues.numberOfUnitsHasValue)
            {
                writer.WriteElementString("numberOfUnits", this.updatedValues.numberOfUnits.ToString());
            }
            else if (this.initialValues.numberOfUnitsHasValue)
            {
                writer.WriteElementString("numberOfUnits", this.initialValues.numberOfUnits.ToString());
            }

            if (this.updatedValues.transactionDateHasValue)
            {
                writer.WriteElementString("transactionDate", this.updatedValues.transactionDate.ToString());
            }
            else if (this.initialValues.transactionDateHasValue)
            {
                writer.WriteElementString("transactionDate", this.initialValues.transactionDate.ToString());
            }

            if (this.updatedValues.valueDateHasValue)
            {
                writer.WriteElementString("valueDate", this.updatedValues.valueDate.ToString());
            }
            else if (this.initialValues.valueDateHasValue)
            {
                writer.WriteElementString("valueDate", this.initialValues.valueDate.ToString());
            }

            if (this.updatedValues.Fund_codeHasValue && !string.IsNullOrEmpty(Fund_code))
            {
                writer.WriteElementString("Fund_code", this.updatedValues.Fund_code);
            }
            else if (this.initialValues.Fund_codeHasValue && !string.IsNullOrEmpty(Fund_code))
            {
                writer.WriteElementString("Fund_code", this.initialValues.Fund_code);
            }

            if (this.updatedValues.FundUnit_typeHasValue && FundUnit_type != UnitType.Null)
            {
                writer.WriteElementString("FundUnit_type", this.updatedValues.FundUnit_type.Value);
            }
            else if (this.initialValues.FundUnit_typeHasValue && FundUnit_type != UnitType.Null)
            {
                writer.WriteElementString("FundUnit_type", this.initialValues.FundUnit_type.Value);
            }

            if (this.updatedValues.MoneyIn_idHasValue && MoneyIn_id != null)
            {
                writer.WriteElementString("MoneyIn_id", this.updatedValues.MoneyIn_id.ToString());
            }
            else if (this.initialValues.MoneyIn_idHasValue && MoneyIn_id != null)
            {
                writer.WriteElementString("MoneyIn_id", this.initialValues.MoneyIn_id.ToString());
            }

            if (this.updatedValues.MonetaryTransaction_idHasValue && MonetaryTransaction_id != null)
            {
                writer.WriteElementString("MonetaryTransaction_id", this.updatedValues.MonetaryTransaction_id.ToString());
            }
            else if (this.initialValues.MonetaryTransaction_idHasValue && MonetaryTransaction_id != null)
            {
                writer.WriteElementString("MonetaryTransaction_id", this.initialValues.MonetaryTransaction_id.ToString());
            }

            if (this.updatedValues.InvestmentBenefit_idHasValue && InvestmentBenefit_id != null)
            {
                writer.WriteElementString("InvestmentBenefit_id", this.updatedValues.InvestmentBenefit_id.ToString());
            }
            else if (this.initialValues.InvestmentBenefit_idHasValue && InvestmentBenefit_id != null)
            {
                writer.WriteElementString("InvestmentBenefit_id", this.initialValues.InvestmentBenefit_id.ToString());
            }

            this.AfterWriteXml(writer);
        }
    }
}
