//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Xml.Linq;
using System.Xml.Serialization;
using Qujck.Pas.Core.Enumerations;
using Qujck.Pas.Model.Standing.DataObjects;

namespace Qujck.Pas.Model.Standing
{
    [Serializable]
    public sealed partial class EtlConfigurationDetail : AbstractStandingEntity
    {
        internal EtlConfigurationDetailDo initialValues { get; private set; }
        internal EtlConfigurationDetailDo updatedValues { get; private set; }
        internal Action<EtlConfigurationDetailDo, string> loadMissingValue { private get; set; }

        public EtlConfigurationDetail()
        {
            this.initialValues = new EtlConfigurationDetailDo();
            this.updatedValues = new EtlConfigurationDetailDo();
            this.loadMissingValue = (a, b) => { };
        }

        [XmlIgnore]
        internal override string schema
        {
            get
            {
                return "Standing";
            }
        }

        [XmlIgnore]
        internal override string table
        {
            get
            {
                return "EtlConfigurationDetail";
            }
        }

        [XmlIgnore]
        internal override IEnumerable<string> columns
        {
            get
            {
                yield return "id";
                yield return "sequence";
                yield return "metadata";
                yield return "disabled";
                yield return "EtlTypeConfiguration_id";
                yield return "EtlConfigurationHeader_id";
            }
        }

        public override long id
        {
            get
            {
                return this.initialValues.id;
            }
            set
            {
                this.initialValues.id = value;
            }
        }

        [XmlElement(ElementName="sequence")]
        public short sequence 
	    { 
            get
            {
                if (this.updatedValues.sequenceHasValue)
                {
                    return this.updatedValues.sequence;
                }
                
                if (!this.initialValues.sequenceHasValue)
                {
                    this.loadMissingValue(this.initialValues, "sequence");
                    this.initialValues.sequenceHasValue = true;
                }

                return this.initialValues.sequence;
            }
            set
            {
                this.updatedValues.sequence = value;
            }
        }

        [XmlElement(ElementName="metadata")]
        public string metadata 
	    { 
            get
            {
                if (this.updatedValues.metadataHasValue)
                {
                    return this.updatedValues.metadata;
                }
                
                if (!this.initialValues.metadataHasValue)
                {
                    this.loadMissingValue(this.initialValues, "metadata");
                    this.initialValues.metadataHasValue = true;
                }

                return this.initialValues.metadata;
            }
            set
            {
                this.updatedValues.metadata = value;
            }
        }

        [RegularExpression(@"[YN]{1}")]
        [XmlElement(ElementName="disabled")]
        public Indicator disabled 
	    { 
            get
            {
                if (this.updatedValues.disabledHasValue)
                {
                    return this.updatedValues.disabled;
                }
                
                if (!this.initialValues.disabledHasValue)
                {
                    this.loadMissingValue(this.initialValues, "disabled");
                    this.initialValues.disabledHasValue = true;
                }

                return this.initialValues.disabled;
            }
            set
            {
                this.updatedValues.disabled = value;
            }
        }

        [XmlElement(ElementName="EtlTypeConfiguration_id")]
        public long EtlTypeConfiguration_id 
	    { 
            get
            {
                if (this.updatedValues.EtlTypeConfiguration_idHasValue)
                {
                    return this.updatedValues.EtlTypeConfiguration_id;
                }
                
                if (!this.initialValues.EtlTypeConfiguration_idHasValue)
                {
                    this.loadMissingValue(this.initialValues, "EtlTypeConfiguration_id");
                    this.initialValues.EtlTypeConfiguration_idHasValue = true;
                }

                return this.initialValues.EtlTypeConfiguration_id;
            }
            set
            {
                this.updatedValues.EtlTypeConfiguration_id = value;
            }
        }

        [XmlElement(ElementName="EtlConfigurationHeader_id")]
        public long EtlConfigurationHeader_id 
	    { 
            get
            {
                if (this.updatedValues.EtlConfigurationHeader_idHasValue)
                {
                    return this.updatedValues.EtlConfigurationHeader_id;
                }
                
                if (!this.initialValues.EtlConfigurationHeader_idHasValue)
                {
                    this.loadMissingValue(this.initialValues, "EtlConfigurationHeader_id");
                    this.initialValues.EtlConfigurationHeader_idHasValue = true;
                }

                return this.initialValues.EtlConfigurationHeader_id;
            }
            set
            {
                this.updatedValues.EtlConfigurationHeader_id = value;
            }
        }

        public bool EtlConfigurationHeaderIsLoaded { get; private set; }
        internal Func<EtlConfigurationHeader> EtlConfigurationHeaderQuery { private get; set; }
        public EtlConfigurationHeader EtlConfigurationHeader
        {
            get
            {
                if (this.EtlConfigurationHeaderQuery == null)
                {
                    return null;
                }
                else
                {
                    var result = this.EtlConfigurationHeaderQuery();
                    if (!this.EtlConfigurationHeaderIsLoaded)
                    {
                        this.EtlConfigurationHeaderIsLoaded = result != null;
                    }

                    return result;
                }
            }
        }

        public bool EtlTypeConfigurationIsLoaded { get; private set; }
        internal Func<EtlTypeConfiguration> EtlTypeConfigurationQuery { private get; set; }
        public EtlTypeConfiguration EtlTypeConfiguration
        {
            get
            {
                if (this.EtlTypeConfigurationQuery == null)
                {
                    return null;
                }
                else
                {
                    var result = this.EtlTypeConfigurationQuery();
                    if (!this.EtlTypeConfigurationIsLoaded)
                    {
                        this.EtlTypeConfigurationIsLoaded = result != null;
                    }

                    return result;
                }
            }
        }

        partial void BeforeDeserialize(IQueryable<XElement> elements);
        partial void AfterDeserialize(IQueryable<XElement> elements);

        public override void Deserialize(IQueryable<XElement> elements)
        {
            this.BeforeDeserialize(elements);

            XElement e1 = elements.FirstOrDefault(x => x.Name == "id");
            if (e1 != null)
            {
                this.id = long.Parse(e1.Value);
            }

            XElement e2 = elements.FirstOrDefault(x => x.Name == "sequence");
            if (e2 != null)
            {
                this.sequence = short.Parse(e2.Value);
            }

            XElement e3 = elements.FirstOrDefault(x => x.Name == "metadata");
            if (e3 != null) 
            {
                this.metadata = e3.Value;
            }

            XElement e4 = elements.FirstOrDefault(x => x.Name == "disabled");
            if (e4 != null)
            {
                this.disabled = e4.Value;
            }

            XElement e5 = elements.FirstOrDefault(x => x.Name == "EtlTypeConfiguration_id");
            if (e5 != null)
            {
                this.EtlTypeConfiguration_id = long.Parse(e5.Value);
            }

            XElement e6 = elements.FirstOrDefault(x => x.Name == "EtlConfigurationHeader_id");
            if (e6 != null)
            {
                this.EtlConfigurationHeader_id = long.Parse(e6.Value);
            }

            this.AfterDeserialize(elements);
        }

        partial void BeforeWriteXml(System.Xml.XmlWriter writer);
        partial void AfterWriteXml(System.Xml.XmlWriter writer);

        public override void WriteXml(System.Xml.XmlWriter writer)
        {
            this.BeforeWriteXml(writer);

            writer.WriteElementString("id", this.initialValues.id.ToString());

            if (this.updatedValues.sequenceHasValue)
            {
                writer.WriteElementString("sequence", this.updatedValues.sequence.ToString());
            }
            else if (this.initialValues.sequenceHasValue)
            {
                writer.WriteElementString("sequence", this.initialValues.sequence.ToString());
            }

            if (this.updatedValues.metadataHasValue && !string.IsNullOrEmpty(metadata))
            {
                writer.WriteElementString("metadata", this.updatedValues.metadata);
            }
            else if (this.initialValues.metadataHasValue && !string.IsNullOrEmpty(metadata))
            {
                writer.WriteElementString("metadata", this.initialValues.metadata);
            }

            if (this.updatedValues.disabledHasValue && disabled != Indicator.Null)
            {
                writer.WriteElementString("disabled", this.updatedValues.disabled.Value);
            }
            else if (this.initialValues.disabledHasValue && disabled != Indicator.Null)
            {
                writer.WriteElementString("disabled", this.initialValues.disabled.Value);
            }

            if (this.updatedValues.EtlTypeConfiguration_idHasValue)
            {
                writer.WriteElementString("EtlTypeConfiguration_id", this.updatedValues.EtlTypeConfiguration_id.ToString());
            }
            else if (this.initialValues.EtlTypeConfiguration_idHasValue)
            {
                writer.WriteElementString("EtlTypeConfiguration_id", this.initialValues.EtlTypeConfiguration_id.ToString());
            }

            if (this.updatedValues.EtlConfigurationHeader_idHasValue)
            {
                writer.WriteElementString("EtlConfigurationHeader_id", this.updatedValues.EtlConfigurationHeader_id.ToString());
            }
            else if (this.initialValues.EtlConfigurationHeader_idHasValue)
            {
                writer.WriteElementString("EtlConfigurationHeader_id", this.initialValues.EtlConfigurationHeader_id.ToString());
            }

            this.AfterWriteXml(writer);
        }
    }
}
