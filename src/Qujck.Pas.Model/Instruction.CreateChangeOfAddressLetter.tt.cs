//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Xml.Linq;
using System.Xml.Serialization;
using Qujck.Pas.Core.Enumerations;
using Qujck.Pas.Model.Instruction.DataObjects;
using Qujck.Pas.Model.Policy;

namespace Qujck.Pas.Model.Instruction
{
    [Serializable]
    public sealed partial class CreateChangeOfAddressLetter : AbstractInstructionEntity, IReferenceParty
    {
        internal CreateChangeOfAddressLetterDo initialValues { get; private set; }
        internal CreateChangeOfAddressLetterDo updatedValues { get; private set; }
        internal Action<CreateChangeOfAddressLetterDo, string> loadMissingValue { private get; set; }

        public CreateChangeOfAddressLetter()
        {
            this.initialValues = new CreateChangeOfAddressLetterDo();
            this.updatedValues = new CreateChangeOfAddressLetterDo();
            this.loadMissingValue = (a, b) => { };
        }

        [XmlIgnore]
        internal override string schema
        {
            get
            {
                return "Instruction";
            }
        }

        [XmlIgnore]
        internal override string table
        {
            get
            {
                return "CreateChangeOfAddressLetter";
            }
        }

        [XmlIgnore]
        internal override IEnumerable<string> columns
        {
            get
            {
                yield return "id";
                yield return "type";
                yield return "oldGoneAwayInd";
                yield return "newGoneAwayInd";
                yield return "NewAddress_id";
                yield return "OldAddress_id";
                yield return "Party_id";
            }
        }

        public override long id
        {
            get
            {
                return this.initialValues.id;
            }
            set
            {
                this.initialValues.id = value;
            }
        }

        [XmlElement(ElementName="type")]
        public AddressChangeType type 
	    { 
            get
            {
                if (this.updatedValues.typeHasValue)
                {
                    return this.updatedValues.type;
                }
                
                if (!this.initialValues.typeHasValue)
                {
                    this.loadMissingValue(this.initialValues, "type");
                    this.initialValues.typeHasValue = true;
                }

                return this.initialValues.type;
            }
            set
            {
                this.updatedValues.type = value;
            }
        }

        [RegularExpression(@"[YN]{1}")]
        [XmlElement(ElementName="oldGoneAwayInd")]
        public Indicator oldGoneAwayInd 
	    { 
            get
            {
                if (this.updatedValues.oldGoneAwayIndHasValue)
                {
                    return this.updatedValues.oldGoneAwayInd;
                }
                
                if (!this.initialValues.oldGoneAwayIndHasValue)
                {
                    this.loadMissingValue(this.initialValues, "oldGoneAwayInd");
                    this.initialValues.oldGoneAwayIndHasValue = true;
                }

                return this.initialValues.oldGoneAwayInd;
            }
            set
            {
                this.updatedValues.oldGoneAwayInd = value;
            }
        }

        [RegularExpression(@"[YN]{1}")]
        [XmlElement(ElementName="newGoneAwayInd")]
        public Indicator newGoneAwayInd 
	    { 
            get
            {
                if (this.updatedValues.newGoneAwayIndHasValue)
                {
                    return this.updatedValues.newGoneAwayInd;
                }
                
                if (!this.initialValues.newGoneAwayIndHasValue)
                {
                    this.loadMissingValue(this.initialValues, "newGoneAwayInd");
                    this.initialValues.newGoneAwayIndHasValue = true;
                }

                return this.initialValues.newGoneAwayInd;
            }
            set
            {
                this.updatedValues.newGoneAwayInd = value;
            }
        }

        [XmlElement(ElementName="NewAddress_id")]
        public long? NewAddress_id 
	    { 
            get
            {
                if (this.updatedValues.NewAddress_idHasValue)
                {
                    return this.updatedValues.NewAddress_id;
                }
                
                if (!this.initialValues.NewAddress_idHasValue)
                {
                    this.loadMissingValue(this.initialValues, "NewAddress_id");
                    this.initialValues.NewAddress_idHasValue = true;
                }

                return this.initialValues.NewAddress_id;
            }
            set
            {
                this.updatedValues.NewAddress_id = value;
            }
        }

        [XmlElement(ElementName="OldAddress_id")]
        public long? OldAddress_id 
	    { 
            get
            {
                if (this.updatedValues.OldAddress_idHasValue)
                {
                    return this.updatedValues.OldAddress_id;
                }
                
                if (!this.initialValues.OldAddress_idHasValue)
                {
                    this.loadMissingValue(this.initialValues, "OldAddress_id");
                    this.initialValues.OldAddress_idHasValue = true;
                }

                return this.initialValues.OldAddress_id;
            }
            set
            {
                this.updatedValues.OldAddress_id = value;
            }
        }

        [XmlElement(ElementName="Party_id")]
        public long Party_id 
	    { 
            get
            {
                if (this.updatedValues.Party_idHasValue)
                {
                    return this.updatedValues.Party_id;
                }
                
                if (!this.initialValues.Party_idHasValue)
                {
                    this.loadMissingValue(this.initialValues, "Party_id");
                    this.initialValues.Party_idHasValue = true;
                }

                return this.initialValues.Party_id;
            }
            set
            {
                this.updatedValues.Party_id = value;
            }
        }

        [XmlIgnore]
        [NotMapped]
        public Party Party { get; set; }

        partial void BeforeDeserialize(IQueryable<XElement> elements);
        partial void AfterDeserialize(IQueryable<XElement> elements);

        public override void Deserialize(IQueryable<XElement> elements)
        {
            this.BeforeDeserialize(elements);

            XElement e1 = elements.FirstOrDefault(x => x.Name == "id");
            if (e1 != null)
            {
                this.id = long.Parse(e1.Value);
            }

            XElement e2 = elements.FirstOrDefault(x => x.Name == "type");
            if (e2 != null)
            {
                this.type = e2.Value;
            }

            XElement e3 = elements.FirstOrDefault(x => x.Name == "oldGoneAwayInd");
            if (e3 != null)
            {
                this.oldGoneAwayInd = e3.Value;
            }

            XElement e4 = elements.FirstOrDefault(x => x.Name == "newGoneAwayInd");
            if (e4 != null)
            {
                this.newGoneAwayInd = e4.Value;
            }

            XElement e5 = elements.FirstOrDefault(x => x.Name == "NewAddress_id");
            if (e5 != null)
            {
                this.NewAddress_id = long.Parse(e5.Value);
            }

            XElement e6 = elements.FirstOrDefault(x => x.Name == "OldAddress_id");
            if (e6 != null)
            {
                this.OldAddress_id = long.Parse(e6.Value);
            }

            XElement e7 = elements.FirstOrDefault(x => x.Name == "Party_id");
            if (e7 != null)
            {
                this.Party_id = long.Parse(e7.Value);
            }

            this.AfterDeserialize(elements);
        }

        partial void BeforeWriteXml(System.Xml.XmlWriter writer);
        partial void AfterWriteXml(System.Xml.XmlWriter writer);

        public override void WriteXml(System.Xml.XmlWriter writer)
        {
            this.BeforeWriteXml(writer);

            writer.WriteElementString("id", this.initialValues.id.ToString());

            if (this.updatedValues.typeHasValue && type != AddressChangeType.Null)
            {
                writer.WriteElementString("type", this.updatedValues.type.Value);
            }
            else if (this.initialValues.typeHasValue && type != AddressChangeType.Null)
            {
                writer.WriteElementString("type", this.initialValues.type.Value);
            }

            if (this.updatedValues.oldGoneAwayIndHasValue && oldGoneAwayInd != Indicator.Null)
            {
                writer.WriteElementString("oldGoneAwayInd", this.updatedValues.oldGoneAwayInd.Value);
            }
            else if (this.initialValues.oldGoneAwayIndHasValue && oldGoneAwayInd != Indicator.Null)
            {
                writer.WriteElementString("oldGoneAwayInd", this.initialValues.oldGoneAwayInd.Value);
            }

            if (this.updatedValues.newGoneAwayIndHasValue && newGoneAwayInd != Indicator.Null)
            {
                writer.WriteElementString("newGoneAwayInd", this.updatedValues.newGoneAwayInd.Value);
            }
            else if (this.initialValues.newGoneAwayIndHasValue && newGoneAwayInd != Indicator.Null)
            {
                writer.WriteElementString("newGoneAwayInd", this.initialValues.newGoneAwayInd.Value);
            }

            if (this.updatedValues.NewAddress_idHasValue && NewAddress_id != null)
            {
                writer.WriteElementString("NewAddress_id", this.updatedValues.NewAddress_id.ToString());
            }
            else if (this.initialValues.NewAddress_idHasValue && NewAddress_id != null)
            {
                writer.WriteElementString("NewAddress_id", this.initialValues.NewAddress_id.ToString());
            }

            if (this.updatedValues.OldAddress_idHasValue && OldAddress_id != null)
            {
                writer.WriteElementString("OldAddress_id", this.updatedValues.OldAddress_id.ToString());
            }
            else if (this.initialValues.OldAddress_idHasValue && OldAddress_id != null)
            {
                writer.WriteElementString("OldAddress_id", this.initialValues.OldAddress_id.ToString());
            }

            if (this.updatedValues.Party_idHasValue)
            {
                writer.WriteElementString("Party_id", this.updatedValues.Party_id.ToString());
            }
            else if (this.initialValues.Party_idHasValue)
            {
                writer.WriteElementString("Party_id", this.initialValues.Party_id.ToString());
            }

            this.AfterWriteXml(writer);
        }
    }
}
