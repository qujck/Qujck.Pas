//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Xml.Linq;
using System.Xml.Serialization;
using Qujck.Pas.Core.Enumerations;
using Qujck.Pas.Model.Interface.DataObjects;

namespace Qujck.Pas.Model.Interface
{
    [Serializable]
    public sealed partial class NewAddressContent : AbstractInterfaceEntity
    {
        internal NewAddressContentDo initialValues { get; private set; }
        internal NewAddressContentDo updatedValues { get; private set; }
        internal Action<NewAddressContentDo, string> loadMissingValue { private get; set; }

        public NewAddressContent()
        {
            this.initialValues = new NewAddressContentDo();
            this.updatedValues = new NewAddressContentDo();
            this.loadMissingValue = (a, b) => { };
        }

        [XmlIgnore]
        internal override string schema
        {
            get
            {
                return "Interface";
            }
        }

        [XmlIgnore]
        internal override string table
        {
            get
            {
                return "NewAddressContent";
            }
        }

        [XmlIgnore]
        internal override IEnumerable<string> columns
        {
            get
            {
                yield return "id";
                yield return "addressLine1";
                yield return "addressLine2";
                yield return "addressLine3";
                yield return "addressLine4";
                yield return "postcode";
                yield return "country";
                yield return "goneAway";
                yield return "LetterContent_id";
            }
        }

        public override long id
        {
            get
            {
                return this.initialValues.id;
            }
            set
            {
                this.initialValues.id = value;
            }
        }

        [StringLength(35)]
        [XmlElement(ElementName="addressLine1")]
        public string addressLine1 
	    { 
            get
            {
                if (this.updatedValues.addressLine1HasValue)
                {
                    return this.updatedValues.addressLine1;
                }
                
                if (!this.initialValues.addressLine1HasValue)
                {
                    this.loadMissingValue(this.initialValues, "addressLine1");
                    this.initialValues.addressLine1HasValue = true;
                }

                return this.initialValues.addressLine1;
            }
            set
            {
                this.updatedValues.addressLine1 = value;
            }
        }

        [StringLength(35)]
        [XmlElement(ElementName="addressLine2")]
        public string addressLine2 
	    { 
            get
            {
                if (this.updatedValues.addressLine2HasValue)
                {
                    return this.updatedValues.addressLine2;
                }
                
                if (!this.initialValues.addressLine2HasValue)
                {
                    this.loadMissingValue(this.initialValues, "addressLine2");
                    this.initialValues.addressLine2HasValue = true;
                }

                return this.initialValues.addressLine2;
            }
            set
            {
                this.updatedValues.addressLine2 = value;
            }
        }

        [StringLength(35)]
        [XmlElement(ElementName="addressLine3")]
        public string addressLine3 
	    { 
            get
            {
                if (this.updatedValues.addressLine3HasValue)
                {
                    return this.updatedValues.addressLine3;
                }
                
                if (!this.initialValues.addressLine3HasValue)
                {
                    this.loadMissingValue(this.initialValues, "addressLine3");
                    this.initialValues.addressLine3HasValue = true;
                }

                return this.initialValues.addressLine3;
            }
            set
            {
                this.updatedValues.addressLine3 = value;
            }
        }

        [StringLength(35)]
        [XmlElement(ElementName="addressLine4")]
        public string addressLine4 
	    { 
            get
            {
                if (this.updatedValues.addressLine4HasValue)
                {
                    return this.updatedValues.addressLine4;
                }
                
                if (!this.initialValues.addressLine4HasValue)
                {
                    this.loadMissingValue(this.initialValues, "addressLine4");
                    this.initialValues.addressLine4HasValue = true;
                }

                return this.initialValues.addressLine4;
            }
            set
            {
                this.updatedValues.addressLine4 = value;
            }
        }

        [StringLength(50)]
        [RegularExpression(@"[A-Z]{1,2}[0-9R][0-9A-Z]? [0-9][A-Z-[CIKMOV]]{2}|(BFPO \d{1,4})")]
        [XmlElement(ElementName="postcode")]
        public string postcode 
	    { 
            get
            {
                if (this.updatedValues.postcodeHasValue)
                {
                    return this.updatedValues.postcode;
                }
                
                if (!this.initialValues.postcodeHasValue)
                {
                    this.loadMissingValue(this.initialValues, "postcode");
                    this.initialValues.postcodeHasValue = true;
                }

                return this.initialValues.postcode;
            }
            set
            {
                this.updatedValues.postcode = value;
            }
        }

        [StringLength(35)]
        [XmlElement(ElementName="country")]
        public string country 
	    { 
            get
            {
                if (this.updatedValues.countryHasValue)
                {
                    return this.updatedValues.country;
                }
                
                if (!this.initialValues.countryHasValue)
                {
                    this.loadMissingValue(this.initialValues, "country");
                    this.initialValues.countryHasValue = true;
                }

                return this.initialValues.country;
            }
            set
            {
                this.updatedValues.country = value;
            }
        }

        [RegularExpression(@"[YN]{1}")]
        [XmlElement(ElementName="goneAway")]
        public Indicator goneAway 
	    { 
            get
            {
                if (this.updatedValues.goneAwayHasValue)
                {
                    return this.updatedValues.goneAway;
                }
                
                if (!this.initialValues.goneAwayHasValue)
                {
                    this.loadMissingValue(this.initialValues, "goneAway");
                    this.initialValues.goneAwayHasValue = true;
                }

                return this.initialValues.goneAway;
            }
            set
            {
                this.updatedValues.goneAway = value;
            }
        }

        [XmlElement(ElementName="LetterContent_id")]
        public long LetterContent_id 
	    { 
            get
            {
                if (this.updatedValues.LetterContent_idHasValue)
                {
                    return this.updatedValues.LetterContent_id;
                }
                
                if (!this.initialValues.LetterContent_idHasValue)
                {
                    this.loadMissingValue(this.initialValues, "LetterContent_id");
                    this.initialValues.LetterContent_idHasValue = true;
                }

                return this.initialValues.LetterContent_id;
            }
            set
            {
                this.updatedValues.LetterContent_id = value;
            }
        }

        public bool LetterContentIsLoaded { get; private set; }
        internal Func<LetterContent> LetterContentQuery { private get; set; }
        public LetterContent LetterContent
        {
            get
            {
                if (this.LetterContentQuery == null)
                {
                    return null;
                }
                else
                {
                    var result = this.LetterContentQuery();
                    if (!this.LetterContentIsLoaded)
                    {
                        this.LetterContentIsLoaded = result != null;
                    }

                    return result;
                }
            }
        }

        partial void BeforeDeserialize(IQueryable<XElement> elements);
        partial void AfterDeserialize(IQueryable<XElement> elements);

        public override void Deserialize(IQueryable<XElement> elements)
        {
            this.BeforeDeserialize(elements);

            XElement e1 = elements.FirstOrDefault(x => x.Name == "id");
            if (e1 != null)
            {
                this.id = long.Parse(e1.Value);
            }

            XElement e2 = elements.FirstOrDefault(x => x.Name == "addressLine1");
            if (e2 != null) 
            {
                this.addressLine1 = e2.Value;
            }

            XElement e3 = elements.FirstOrDefault(x => x.Name == "addressLine2");
            if (e3 != null) 
            {
                this.addressLine2 = e3.Value;
            }

            XElement e4 = elements.FirstOrDefault(x => x.Name == "addressLine3");
            if (e4 != null) 
            {
                this.addressLine3 = e4.Value;
            }

            XElement e5 = elements.FirstOrDefault(x => x.Name == "addressLine4");
            if (e5 != null) 
            {
                this.addressLine4 = e5.Value;
            }

            XElement e6 = elements.FirstOrDefault(x => x.Name == "postcode");
            if (e6 != null) 
            {
                this.postcode = e6.Value;
            }

            XElement e7 = elements.FirstOrDefault(x => x.Name == "country");
            if (e7 != null) 
            {
                this.country = e7.Value;
            }

            XElement e8 = elements.FirstOrDefault(x => x.Name == "goneAway");
            if (e8 != null)
            {
                this.goneAway = e8.Value;
            }

            XElement e9 = elements.FirstOrDefault(x => x.Name == "LetterContent_id");
            if (e9 != null)
            {
                this.LetterContent_id = long.Parse(e9.Value);
            }

            this.AfterDeserialize(elements);
        }

        partial void BeforeWriteXml(System.Xml.XmlWriter writer);
        partial void AfterWriteXml(System.Xml.XmlWriter writer);

        public override void WriteXml(System.Xml.XmlWriter writer)
        {
            this.BeforeWriteXml(writer);

            writer.WriteElementString("id", this.initialValues.id.ToString());

            if (this.updatedValues.addressLine1HasValue && !string.IsNullOrEmpty(addressLine1))
            {
                writer.WriteElementString("addressLine1", this.updatedValues.addressLine1);
            }
            else if (this.initialValues.addressLine1HasValue && !string.IsNullOrEmpty(addressLine1))
            {
                writer.WriteElementString("addressLine1", this.initialValues.addressLine1);
            }

            if (this.updatedValues.addressLine2HasValue && !string.IsNullOrEmpty(addressLine2))
            {
                writer.WriteElementString("addressLine2", this.updatedValues.addressLine2);
            }
            else if (this.initialValues.addressLine2HasValue && !string.IsNullOrEmpty(addressLine2))
            {
                writer.WriteElementString("addressLine2", this.initialValues.addressLine2);
            }

            if (this.updatedValues.addressLine3HasValue && !string.IsNullOrEmpty(addressLine3))
            {
                writer.WriteElementString("addressLine3", this.updatedValues.addressLine3);
            }
            else if (this.initialValues.addressLine3HasValue && !string.IsNullOrEmpty(addressLine3))
            {
                writer.WriteElementString("addressLine3", this.initialValues.addressLine3);
            }

            if (this.updatedValues.addressLine4HasValue && !string.IsNullOrEmpty(addressLine4))
            {
                writer.WriteElementString("addressLine4", this.updatedValues.addressLine4);
            }
            else if (this.initialValues.addressLine4HasValue && !string.IsNullOrEmpty(addressLine4))
            {
                writer.WriteElementString("addressLine4", this.initialValues.addressLine4);
            }

            if (this.updatedValues.postcodeHasValue && !string.IsNullOrEmpty(postcode))
            {
                writer.WriteElementString("postcode", this.updatedValues.postcode);
            }
            else if (this.initialValues.postcodeHasValue && !string.IsNullOrEmpty(postcode))
            {
                writer.WriteElementString("postcode", this.initialValues.postcode);
            }

            if (this.updatedValues.countryHasValue && !string.IsNullOrEmpty(country))
            {
                writer.WriteElementString("country", this.updatedValues.country);
            }
            else if (this.initialValues.countryHasValue && !string.IsNullOrEmpty(country))
            {
                writer.WriteElementString("country", this.initialValues.country);
            }

            if (this.updatedValues.goneAwayHasValue && goneAway != Indicator.Null)
            {
                writer.WriteElementString("goneAway", this.updatedValues.goneAway.Value);
            }
            else if (this.initialValues.goneAwayHasValue && goneAway != Indicator.Null)
            {
                writer.WriteElementString("goneAway", this.initialValues.goneAway.Value);
            }

            if (this.updatedValues.LetterContent_idHasValue)
            {
                writer.WriteElementString("LetterContent_id", this.updatedValues.LetterContent_id.ToString());
            }
            else if (this.initialValues.LetterContent_idHasValue)
            {
                writer.WriteElementString("LetterContent_id", this.initialValues.LetterContent_id.ToString());
            }

            this.AfterWriteXml(writer);
        }
    }
}
