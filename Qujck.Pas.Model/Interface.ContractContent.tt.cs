//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text;
using System.Xml.Linq;
using System.Xml.Serialization;
using Qujck.Pas.Core.Enumerations;
using Qujck.Pas.Model.Interface.DataObjects;

namespace Qujck.Pas.Model.Interface
{
    [Serializable]
    public sealed partial class ContractContent : AbstractInterfaceEntity
    {
        internal ContractContentDo initialValues { get; private set; }
        internal ContractContentDo updatedValues { get; private set; }
        internal Action<ContractContentDo, string> loadMissingValue { private get; set; }

        public ContractContent()
        {
            this.initialValues = new ContractContentDo();
            this.updatedValues = new ContractContentDo();
            this.loadMissingValue = (a, b) => { };
        }

        [XmlIgnore]
        internal override string schema
        {
            get
            {
                return "Interface";
            }
        }

        [XmlIgnore]
        internal override string table
        {
            get
            {
                return "ContractContent";
            }
        }

        [XmlIgnore]
        internal override IEnumerable<string> columns
        {
            get
            {
                yield return "id";
                yield return "Contract_id";
                yield return "Product_name";
                yield return "Product_code";
                yield return "issueDate";
                yield return "contributionAmount";
                yield return "lastStatementDate";
                yield return "nextStatementDate";
                yield return "LetterContent_id";
            }
        }

        public override long id
        {
            get
            {
                return this.initialValues.id;
            }
            set
            {
                this.initialValues.id = value;
            }
        }

        [XmlElement(ElementName="Contract_id")]
        public long? Contract_id 
	    { 
            get
            {
                if (this.updatedValues.Contract_idHasValue)
                {
                    return this.updatedValues.Contract_id;
                }
                
                if (!this.initialValues.Contract_idHasValue)
                {
                    this.loadMissingValue(this.initialValues, "Contract_id");
                    this.initialValues.Contract_idHasValue = true;
                }

                return this.initialValues.Contract_id;
            }
            set
            {
                this.updatedValues.Contract_id = value;
            }
        }

        [StringLength(25)]
        [XmlElement(ElementName="Product_name")]
        public string Product_name 
	    { 
            get
            {
                if (this.updatedValues.Product_nameHasValue)
                {
                    return this.updatedValues.Product_name;
                }
                
                if (!this.initialValues.Product_nameHasValue)
                {
                    this.loadMissingValue(this.initialValues, "Product_name");
                    this.initialValues.Product_nameHasValue = true;
                }

                return this.initialValues.Product_name;
            }
            set
            {
                this.updatedValues.Product_name = value;
            }
        }

        [StringLength(25)]
        [XmlElement(ElementName="Product_code")]
        public string Product_code 
	    { 
            get
            {
                if (this.updatedValues.Product_codeHasValue)
                {
                    return this.updatedValues.Product_code;
                }
                
                if (!this.initialValues.Product_codeHasValue)
                {
                    this.loadMissingValue(this.initialValues, "Product_code");
                    this.initialValues.Product_codeHasValue = true;
                }

                return this.initialValues.Product_code;
            }
            set
            {
                this.updatedValues.Product_code = value;
            }
        }

        [DisplayFormat(DataFormatString="{0:d}", ApplyFormatInEditMode=true)]
        [XmlElement(ElementName="issueDate")]
        public System.DateTime? issueDate 
	    { 
            get
            {
                if (this.updatedValues.issueDateHasValue)
                {
                    return this.updatedValues.issueDate;
                }
                
                if (!this.initialValues.issueDateHasValue)
                {
                    this.loadMissingValue(this.initialValues, "issueDate");
                    this.initialValues.issueDateHasValue = true;
                }

                return this.initialValues.issueDate;
            }
            set
            {
                this.updatedValues.issueDate = value;
            }
        }

        [XmlElement(ElementName="contributionAmount")]
        public decimal? contributionAmount 
	    { 
            get
            {
                if (this.updatedValues.contributionAmountHasValue)
                {
                    return this.updatedValues.contributionAmount;
                }
                
                if (!this.initialValues.contributionAmountHasValue)
                {
                    this.loadMissingValue(this.initialValues, "contributionAmount");
                    this.initialValues.contributionAmountHasValue = true;
                }

                return this.initialValues.contributionAmount;
            }
            set
            {
                this.updatedValues.contributionAmount = value;
            }
        }

        [DisplayFormat(DataFormatString="{0:d}", ApplyFormatInEditMode=true)]
        [XmlElement(ElementName="lastStatementDate")]
        public System.DateTime? lastStatementDate 
	    { 
            get
            {
                if (this.updatedValues.lastStatementDateHasValue)
                {
                    return this.updatedValues.lastStatementDate;
                }
                
                if (!this.initialValues.lastStatementDateHasValue)
                {
                    this.loadMissingValue(this.initialValues, "lastStatementDate");
                    this.initialValues.lastStatementDateHasValue = true;
                }

                return this.initialValues.lastStatementDate;
            }
            set
            {
                this.updatedValues.lastStatementDate = value;
            }
        }

        [DisplayFormat(DataFormatString="{0:d}", ApplyFormatInEditMode=true)]
        [XmlElement(ElementName="nextStatementDate")]
        public System.DateTime? nextStatementDate 
	    { 
            get
            {
                if (this.updatedValues.nextStatementDateHasValue)
                {
                    return this.updatedValues.nextStatementDate;
                }
                
                if (!this.initialValues.nextStatementDateHasValue)
                {
                    this.loadMissingValue(this.initialValues, "nextStatementDate");
                    this.initialValues.nextStatementDateHasValue = true;
                }

                return this.initialValues.nextStatementDate;
            }
            set
            {
                this.updatedValues.nextStatementDate = value;
            }
        }

        [XmlElement(ElementName="LetterContent_id")]
        public long LetterContent_id 
	    { 
            get
            {
                if (this.updatedValues.LetterContent_idHasValue)
                {
                    return this.updatedValues.LetterContent_id;
                }
                
                if (!this.initialValues.LetterContent_idHasValue)
                {
                    this.loadMissingValue(this.initialValues, "LetterContent_id");
                    this.initialValues.LetterContent_idHasValue = true;
                }

                return this.initialValues.LetterContent_id;
            }
            set
            {
                this.updatedValues.LetterContent_id = value;
            }
        }

        public bool LetterContentIsLoaded { get; private set; }
        internal Func<LetterContent> LetterContentQuery { private get; set; }
        public LetterContent LetterContent
        {
            get
            {
                if (this.LetterContentQuery == null)
                {
                    return null;
                }
                else
                {
                    var result = this.LetterContentQuery();
                    if (!this.LetterContentIsLoaded)
                    {
                        this.LetterContentIsLoaded = result != null;
                    }

                    return result;
                }
            }
        }

        partial void BeforeDeserialize(IQueryable<XElement> elements);
        partial void AfterDeserialize(IQueryable<XElement> elements);

        public override void Deserialize(IQueryable<XElement> elements)
        {
            this.BeforeDeserialize(elements);

            XElement e1 = elements.FirstOrDefault(x => x.Name == "id");
            if (e1 != null)
            {
                this.id = long.Parse(e1.Value);
            }

            XElement e2 = elements.FirstOrDefault(x => x.Name == "Contract_id");
            if (e2 != null)
            {
                this.Contract_id = long.Parse(e2.Value);
            }

            XElement e3 = elements.FirstOrDefault(x => x.Name == "Product_name");
            if (e3 != null) 
            {
                this.Product_name = e3.Value;
            }

            XElement e4 = elements.FirstOrDefault(x => x.Name == "Product_code");
            if (e4 != null) 
            {
                this.Product_code = e4.Value;
            }

            XElement e5 = elements.FirstOrDefault(x => x.Name == "issueDate");
            if (e5 != null)
            {
                this.issueDate = System.DateTime.Parse(e5.Value);
            }

            XElement e6 = elements.FirstOrDefault(x => x.Name == "contributionAmount");
            if (e6 != null)
            {
                this.contributionAmount = decimal.Parse(e6.Value);
            }

            XElement e7 = elements.FirstOrDefault(x => x.Name == "lastStatementDate");
            if (e7 != null)
            {
                this.lastStatementDate = System.DateTime.Parse(e7.Value);
            }

            XElement e8 = elements.FirstOrDefault(x => x.Name == "nextStatementDate");
            if (e8 != null)
            {
                this.nextStatementDate = System.DateTime.Parse(e8.Value);
            }

            XElement e9 = elements.FirstOrDefault(x => x.Name == "LetterContent_id");
            if (e9 != null)
            {
                this.LetterContent_id = long.Parse(e9.Value);
            }

            this.AfterDeserialize(elements);
        }

        partial void BeforeWriteXml(System.Xml.XmlWriter writer);
        partial void AfterWriteXml(System.Xml.XmlWriter writer);

        public override void WriteXml(System.Xml.XmlWriter writer)
        {
            this.BeforeWriteXml(writer);

            writer.WriteElementString("id", this.initialValues.id.ToString());

            if (this.updatedValues.Contract_idHasValue && Contract_id != null)
            {
                writer.WriteElementString("Contract_id", this.updatedValues.Contract_id.ToString());
            }
            else if (this.initialValues.Contract_idHasValue && Contract_id != null)
            {
                writer.WriteElementString("Contract_id", this.initialValues.Contract_id.ToString());
            }

            if (this.updatedValues.Product_nameHasValue && !string.IsNullOrEmpty(Product_name))
            {
                writer.WriteElementString("Product_name", this.updatedValues.Product_name);
            }
            else if (this.initialValues.Product_nameHasValue && !string.IsNullOrEmpty(Product_name))
            {
                writer.WriteElementString("Product_name", this.initialValues.Product_name);
            }

            if (this.updatedValues.Product_codeHasValue && !string.IsNullOrEmpty(Product_code))
            {
                writer.WriteElementString("Product_code", this.updatedValues.Product_code);
            }
            else if (this.initialValues.Product_codeHasValue && !string.IsNullOrEmpty(Product_code))
            {
                writer.WriteElementString("Product_code", this.initialValues.Product_code);
            }

            if (this.updatedValues.issueDateHasValue && issueDate != null)
            {
                writer.WriteElementString("issueDate", this.updatedValues.issueDate.ToString());
            }
            else if (this.initialValues.issueDateHasValue && issueDate != null)
            {
                writer.WriteElementString("issueDate", this.initialValues.issueDate.ToString());
            }

            if (this.updatedValues.contributionAmountHasValue && contributionAmount != null)
            {
                writer.WriteElementString("contributionAmount", this.updatedValues.contributionAmount.ToString());
            }
            else if (this.initialValues.contributionAmountHasValue && contributionAmount != null)
            {
                writer.WriteElementString("contributionAmount", this.initialValues.contributionAmount.ToString());
            }

            if (this.updatedValues.lastStatementDateHasValue && lastStatementDate != null)
            {
                writer.WriteElementString("lastStatementDate", this.updatedValues.lastStatementDate.ToString());
            }
            else if (this.initialValues.lastStatementDateHasValue && lastStatementDate != null)
            {
                writer.WriteElementString("lastStatementDate", this.initialValues.lastStatementDate.ToString());
            }

            if (this.updatedValues.nextStatementDateHasValue && nextStatementDate != null)
            {
                writer.WriteElementString("nextStatementDate", this.updatedValues.nextStatementDate.ToString());
            }
            else if (this.initialValues.nextStatementDateHasValue && nextStatementDate != null)
            {
                writer.WriteElementString("nextStatementDate", this.initialValues.nextStatementDate.ToString());
            }

            if (this.updatedValues.LetterContent_idHasValue)
            {
                writer.WriteElementString("LetterContent_id", this.updatedValues.LetterContent_id.ToString());
            }
            else if (this.initialValues.LetterContent_idHasValue)
            {
                writer.WriteElementString("LetterContent_id", this.initialValues.LetterContent_id.ToString());
            }

            this.AfterWriteXml(writer);
        }
    }
}
